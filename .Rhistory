collision.df= fread("data/NYPD_Motor_Vehicle_Collisions.csv",select=c("DATE","TIME","LATITUDE", "LONGITUDE",
"NUMBER OF PERSONS INJURED","NUMBER OF PERSONS KILLED","NUMBER OF PEDESTRIANS INJURED",
"NUMBER OF PEDESTRIANS KILLED","NUMBER OF CYCLIST INJURED","NUMBER OF CYCLIST KILLED",
"NUMBER OF MOTORIST INJURED", "NUMBER OF MOTORIST KILLED","VEHICLE TYPE CODE 1",
"VEHICLE TYPE CODE 2", "VEHICLE TYPE CODE 3"))
names(collision.df)
dir(0)
dir()
dir("data")
collision.df.bike= fread("data/manhattan_bike_injury.csv")
names(collision.df.bike)
collision.df.bike= fread("data/manhattan_bike_injury.csv",select=c("DATE","TIME","LATITUDE", "LONGITUDE",
"NUMBER OF PERSONS INJURED","NUMBER OF PERSONS KILLED","NUMBER OF PEDESTRIANS INJURED",
"NUMBER OF PEDESTRIANS KILLED","NUMBER OF CYCLIST INJURED","NUMBER OF CYCLIST KILLED",
"NUMBER OF MOTORIST INJURED", "NUMBER OF MOTORIST KILLED""VEHICLE TYPE CODE 1",
"VEHICLE TYPE CODE 2", "VEHICLE TYPE CODE 3"))
collision.df.bike= fread("data/manhattan_bike_injury.csv",select=c("DATE","TIME","LATITUDE", "LONGITUDE",
"NUMBER OF PERSONS INJURED","NUMBER OF PERSONS KILLED","NUMBER OF PEDESTRIANS INJURED",
"NUMBER OF PEDESTRIANS KILLED","NUMBER OF CYCLIST INJURED","NUMBER OF CYCLIST KILLED",
"NUMBER OF MOTORIST INJURED", "NUMBER OF MOTORIST KILLED", "VEHICLE TYPE CODE 1",
"VEHICLE TYPE CODE 2", "VEHICLE TYPE CODE 3"))
names(collision.df.bike)
collision.df.auto= fread("data/NYPD_Motor_Vehicle_Collisions.csv",select=c("DATE","TIME","LATITUDE", "LONGITUDE",
"NUMBER OF PERSONS INJURED","NUMBER OF PERSONS KILLED","NUMBER OF PEDESTRIANS INJURED",
"NUMBER OF PEDESTRIANS KILLED","NUMBER OF CYCLIST INJURED","NUMBER OF CYCLIST KILLED",
"NUMBER OF MOTORIST INJURED", "NUMBER OF MOTORIST KILLED","VEHICLE TYPE CODE 1",
"VEHICLE TYPE CODE 2", "VEHICLE TYPE CODE 3"))
collision.df.bike= fread("data/manhattan_bike_injury.csv",select=c("DATE","TIME","LATITUDE", "LONGITUDE",
"NUMBER OF PERSONS INJURED","NUMBER OF PERSONS KILLED","NUMBER OF PEDESTRIANS INJURED",
"NUMBER OF PEDESTRIANS KILLED","NUMBER OF CYCLIST INJURED","NUMBER OF CYCLIST KILLED",
"NUMBER OF MOTORIST INJURED", "NUMBER OF MOTORIST KILLED", "VEHICLE TYPE CODE 1",
"VEHICLE TYPE CODE 2", "VEHICLE TYPE CODE 3"))
names(collision.df.bike)
collision.df<- data.frame(rbind(collision.df.auto, collision.df.bike))
dim(collision.df)
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-73.961468, lat=40.810308, popup="Applied Data Science")
m
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-73.961468, lat=40.810308, popup="Applied Data Science") %>%
addMarkers(lng=-75, lat=41, popup="test")
m
addMarkers(lng=-74, lat=40.9, popup="test")
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-73.961468, lat=40.810308, popup="Applied Data Science") %>%
addMarkers(lng=-74, lat=40.9, popup="test")
m
m <- leaflet() %>%
#addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-73.961468, lat=40.810308, popup="Applied Data Science") %>%
addMarkers(lng=-74, lat=40.9, popup="test")
m
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-73.961468, lat=40.810308, popup="Applied Data Science") %>%
addMarkers(lng=-74, lat=40.9, popup="test")
m
dir()
dir("data")
hospital.df= fread("data/Health_and_Hospitals_Corporation__HHC__Facilities.csv")
hospital.df[1:2,]
names(hospital.df)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-73.961468, lat=40.810308, popup="Applied Data Science") %>%
addMarkers(lng=-74, lat=40.9, popup="test")
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-73.961468, lat=40.810308, popup="Applied Data Science") %>%
addMarkers(lng=-73.7, lat=40.9, popup="test")
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-73.961468, lat=40.810308, popup="Applied Data Science") %>%
addMarkers(lng=-73.9, lat=40.7, popup="test")
m
collision.df.auto[1:10,]
setwd("~/Documents/Courses/ADS/Project 2/Fall2016-Proj2-grp14")
library(data.table)
collision.test <- dollision.df[1:20,]
collision.df.auto= fread("data/NYPD_Motor_Vehicle_Collisions.csv",select=c("DATE","TIME","LATITUDE", "LONGITUDE",
"NUMBER OF PERSONS INJURED","NUMBER OF PERSONS KILLED","NUMBER OF PEDESTRIANS INJURED",
"NUMBER OF PEDESTRIANS KILLED","NUMBER OF CYCLIST INJURED","NUMBER OF CYCLIST KILLED",
"NUMBER OF MOTORIST INJURED", "NUMBER OF MOTORIST KILLED","VEHICLE TYPE CODE 1",
"VEHICLE TYPE CODE 2", "VEHICLE TYPE CODE 3"))
collision.df.bike= fread("data/manhattan_bike_injury.csv",select=c("DATE","TIME","LATITUDE", "LONGITUDE",
"NUMBER OF PERSONS INJURED","NUMBER OF PERSONS KILLED","NUMBER OF PEDESTRIANS INJURED",
"NUMBER OF PEDESTRIANS KILLED","NUMBER OF CYCLIST INJURED","NUMBER OF CYCLIST KILLED",
"NUMBER OF MOTORIST INJURED", "NUMBER OF MOTORIST KILLED", "VEHICLE TYPE CODE 1",
"VEHICLE TYPE CODE 2", "VEHICLE TYPE CODE 3"))
hospital.df= fread("data/Health_and_Hospitals_Corporation__HHC__Facilities.csv")
collision.df<- data.frame(rbind(collision.df.auto, collision.df.bike))
collision.test <- dollision.df[1:20,]
collision.test <- collision.df[1:20,]
collision.test
collision.test$People.Injured = (collision.test$NUMBER.OF.PERSONS.INJURED !=0)
collision.test
collision.test$People.Killed = (collision.test$NUMBER.OF.PERSONS.KILLED !=0)
collision.test$People.Injured.or.Killed= (collision.test$NUMBER.OF.PERSONS.INJURED !=0 |collision.test$NUMBER.OF.PERSONS.KILLED !=0 )
dim(collision.test)
collision.test(,c(5,6,18))
collision.test[,c(5,6,18)]
collision.test <- collision.df[21:40,]
collision.test$People.Injured = (collision.test$NUMBER.OF.PERSONS.INJURED !=0)
collision.test$People.Killed = (collision.test$NUMBER.OF.PERSONS.KILLED !=0)
collision.test$People.Injured.or.Killed= (collision.test$NUMBER.OF.PERSONS.INJURED !=0 |collision.test$NUMBER.OF.PERSONS.KILLED !=0 )
collision.test[,c(5,6,18)]
collision.df[collision.df$NUMBER.OF.PERSONS.KILLED==1,]
collision.df[collision.df$NUMBER.OF.PERSONS.KILLED==1,1:2]
collision.df[collision.df$NUMBER.OF.PERSONS.KILLED==1,5:6]
a=collision.df[collision.df$NUMBER.OF.PERSONS.KILLED==1,5:6]
a[1:10]
a[1:10,]
collision.test <- collision.df[290:300,]
collision.test$People.Injured = (collision.test$NUMBER.OF.PERSONS.INJURED !=0)
collision.test$People.Killed = (collision.test$NUMBER.OF.PERSONS.KILLED !=0)
collision.test$People.Injured.or.Killed= (collision.test$NUMBER.OF.PERSONS.INJURED !=0 |collision.test$NUMBER.OF.PERSONS.KILLED !=0 )
collision.test[,c(5,6,18)]
hospital.df[1,1]
hospital.df[1,]
collision.df[1,1]
dim(collision.df)
collision.df[nrow(collision.df),1)
collision.df[nrow(collision.df),1]
class(collision.df[1,1])
collision.df[1:20,1]
dts <- dates("01/01/98") + trunc(365 * runif(50))
install.packages("chron")
librart(chron)
library(chron)
dts <- dates("01/01/98") + trunc(365 * runif(50))
dts
class(dts)
as.Idate("04/21/98")
library(data.table)
as.IDate("04/21/98")
as.IDate("98-01-01")
as.IDate("1998-01-01")
a=as.IDate("1998-01-01")
a
is.holiday(a)
a=as.IDate("2016-10-01")
is.holiday(a)
is.weekend(a)
collision.df.auto= fread("data/NYPD_Motor_Vehicle_Collisions.csv",select=c("DATE","TIME","LATITUDE", "LONGITUDE",
"NUMBER OF PERSONS INJURED","NUMBER OF PERSONS KILLED","NUMBER OF PEDESTRIANS INJURED",
"NUMBER OF PEDESTRIANS KILLED","NUMBER OF CYCLIST INJURED","NUMBER OF CYCLIST KILLED",
"NUMBER OF MOTORIST INJURED", "NUMBER OF MOTORIST KILLED"))
collision.df.bike= fread("data/manhattan_bike_injury.csv",select=c("DATE","TIME","LATITUDE", "LONGITUDE",
"NUMBER OF PERSONS INJURED","NUMBER OF PERSONS KILLED","NUMBER OF PEDESTRIANS INJURED",
"NUMBER OF PEDESTRIANS KILLED","NUMBER OF CYCLIST INJURED","NUMBER OF CYCLIST KILLED",
"NUMBER OF MOTORIST INJURED", "NUMBER OF MOTORIST KILLED"))
collision.df<- data.frame(rbind(collision.df.auto, collision.df.bike))
collision.df[1,1]
ISOdate(2014, 2, 3, hour = 8, min = 1, sec = 2, tz = "GMT")
a=ISOdate(2016, 10, 1, hour = 8, min = 1, sec = 2, tz = "GMT")
is.weekend(a)
collision.test[1,1]
collision.test[1,2]
a=ISOdate(2016, 10, 1, hour = 17, min = 1, sec = 2, tz = "GMT")
is.weekend(a)
effective.matrix=matrix(c(29,14,2,15),2,2)
effective.matrix
fisher.test(effective.matrix)
cure.matrix=matrix(c(23,3,8,26),2,2)
cure.matrix
fisher.test(cure.matrix)
collision.test[1,1:2]
as.numeric(collision.test[1,1])
collision.test[1,1]
as.character.Date(collision.test[1,1])
as.Date.numeric(collision.test[1,1])
as.Date.numeric(as.Date.numeric(collision.test[1,1]))
dates <- c("02/27/92", "02/27/92", "01/14/92", "02/28/92", "02/01/92")
as.Date(dates, "%m/%d/%y")
x=collision.df[1,1]
a=as.Date(as.character.Date(x))
x
a=as.character.Date(x)
a
as.date(a)
a=as.Date(as.character.Date(x))
as.character.Date(x)
a
as.Date(a)
a=as.Date(as.character.Date(x),"%m/%d/%y")
a
x
as.character.Date(x)
b=as.character.Date(x)
b
as.Date(b,"%m%d%y")
as.Date(b,"%m/%d/%y")
dates <- c("02/27/92", "02/27/92", "01/14/92", "02/28/92", "02/01/92")
as.Date(dates, "%m/%d/%y")
as.Date(b,"%m/%d/%yy")
a=as.Date(as.character.Date(x),"%m/%d/%Y")
a
collision.test$Date.Time= sapply(collision.test,f,collision.test[,1])
f <- function(x){
a=as.Date(as.character.Date(x),"%m/%d/%Y")
}
collision.test$Date.Time= sapply(collision.test,f,collision.test[,1])
f <- function(x){
a=as.Date(as.character.Date(x),"%m/%d/%Y")
return(a)
}
collision.test$Date.Time= sapply(collision.test$DATE,1,f)
f <- function(x){
a=as.Date(as.character.Date(x),"%m/%d/%Y")
return(a)
}
collision.test$Date.Time= apply(collision.test$DATE,1,f)
sapply(1:5,function(x) matrix(x,2,2))
sapply(1:5,function(x) matrix(x,2,3))
collision.test= sapply(collision.test,f,collision.test$DATE)
f <- function(x){
collision.test$Date2=as.Date(as.character.Date(x),"%m/%d/%Y")
return(a)
}
collision.test= sapply(collision.test,f,collision.test$DATE)
collision.test[1:3,1]
collision.test[1:3,]
?sapply
f <- function(x){
collision.test$Date2=as.Date(as.character.Date(x),"%m/%d/%Y")
return(collision.test$Date2)
}
collision.test= sapply(collision.test,f,collision.test$DATE)
#collision.test[1,2]
f <- function(x){
a=as.Date(as.character.Date(x),"%m/%d/%Y")
return(a)
}
collision.test$aaa= sapply(collision.test$DATE,f)
collision.test[1,]
collision.test$DATE[1]
a=collision.test$DATE[1]
b=as.Date(as.character.Date(a),"%m/%d/%Y")
b
f <- function(x){
a=as.Date(as.character.Date(x),"%m/%d/%Y")
return(a)
}
collision.test$aaa= sapply(collision.test$DATE,f)
collision.test$aaa【1：5
collision.test$aaa[1:5]
collision.test$aaa= f(collision.test$DATE)
collision.test$aaa[1:5]
collision.test$Date.2= trans.date(collision.test$DATE)
trans.date <- function(x){
a=as.Date(as.character.Date(x),"%m/%d/%Y")
return(a)
}
collision.test$Date.2= trans.date(collision.test$DATE)
collision.test= subset(collision.test, select=-"Date.2")
collision.test= subset(collision.test, select=-Date.2)
names(collision.test)
collision.test= subset(collision.test, select=-aaa)
library(chron)
#collision.test[1,2]
trans.date <- function(x){
a=as.Date(as.character.Date(x),"%m/%d/%Y")
return(a)
}
collision.test$Date= trans.date(collision.test$DATE)
collision.test[1,]
collision.test= subset(collision.test, select=-Date)
collision.test$DATE= trans.date(collision.test$DATE)
collision.test[1,]
collision.test$Weekend = is.weekend(collision.test$DATE)
collision.test[1,]
collision.test$Holiday= is.holiday(collision.test$DATE)
collision.test[1,]
])
class(collision.test[1,2])
grep("[a-z]", letters)
txt <- c("arm","foot","lefroo", "bafoobar")
if(length(i <- grep("foo", txt)))
cat("'foo' appears at least once in\n\t", txt, "\n")
i # 2 and 4
txt[i]
grep("foo", txt)
agrep("lasy", "1 lazy 2")
agrep("lasy", "1 lazy 2", max = list(sub = 0))
agrep("lasy", "1 lazy 2", max = list(sub = 1))
agrep("laysy", c("1 lazy", "1", "1 LAZY"), max = 2)
agrep("laysy", c("1 lazy", "1", "1 LAZY"), max = 1)
substr("abcdef", 2, 4)
collision.test$TIME= substr(collision.test$TIME,1,2)
collision.test[1:2,1:10]
collision.test[1:10,1:2]
collision.test <- collision.df[290:300,]
collision.test[1:10,1:2]
collision.df[1:100,2]
noquote(strsplit("A text I want to display with spaces", NULL)[[1]])
v
x <- c(as = "asfef", qu = "qwerty", "yuiop[", "b", "stuff.blah.yech")
x
strsplit(x, "e")
test= collision.test$TIME[1:3]
test
strsplit(test,":")
test2= strsplit(test,":")
class(test2
)
test2[[2]]
test2[1
]
test2[1][2]
test2[[1]][2]
collision.test$TIME.2= strsplit(collision.test$TIME,":")[[1]][1]
collision.test[1,]
collision.test$TIME.2[1:10]
collision.test[1:10,c(2,"TIME.2")]
collision.test[1:10,c(2,13)]
a= strsplit(collision.test$TIME,":")
class(a)
length(a)
collision.test$TIME.2= sapply(strsplit(collision.test$TIME,":"), "[[", 2)
collision.test[1:10,c(2,13)]
collision.test$TIME.2= sapply(strsplit(collision.test$TIME,":"), "[[", 1)
collision.test[1:10,c(2,13)]
collision.test= subset(collision.test, select=-TIME.2)
collision.test$TIME= sapply(strsplit(collision.test$TIME,":"), "[[", 1)
collision.test$TIME<- sapply(strsplit(collision.test$TIME,":"), "[[", 1) <- as.factor()
collision.test$TIME= as.factor(sapply(strsplit(collision.test$TIME,":"), "[[", 1) )
collision.test[1:10,2]
View(collision.test)
library(data.table)
library(chron)
#read data #
###################################################################
collision.df.auto= fread("data/NYPD_Motor_Vehicle_Collisions.csv",select=c("DATE","TIME","LATITUDE", "LONGITUDE",
"NUMBER OF PERSONS INJURED","NUMBER OF PERSONS KILLED","NUMBER OF PEDESTRIANS INJURED",
"NUMBER OF PEDESTRIANS KILLED","NUMBER OF CYCLIST INJURED","NUMBER OF CYCLIST KILLED",
"NUMBER OF MOTORIST INJURED", "NUMBER OF MOTORIST KILLED"))
collision.df.bike= fread("data/manhattan_bike_injury.csv",select=c("DATE","TIME","LATITUDE", "LONGITUDE",
"NUMBER OF PERSONS INJURED","NUMBER OF PERSONS KILLED","NUMBER OF PEDESTRIANS INJURED",
"NUMBER OF PEDESTRIANS KILLED","NUMBER OF CYCLIST INJURED","NUMBER OF CYCLIST KILLED",
"NUMBER OF MOTORIST INJURED", "NUMBER OF MOTORIST KILLED"))
collision.df<- data.frame(rbind(collision.df.auto, collision.df.bike))
collision.df$People.Injured = (collision.df$NUMBER.OF.PERSONS.INJURED !=0)
collision.df$People.Killed = (collision.df$NUMBER.OF.PERSONS.KILLED !=0)
collision.df$People.Injured.or.Killed= (collision.df$NUMBER.OF.PERSONS.INJURED !=0 |collision.df$NUMBER.OF.PERSONS.KILLED !=0 )
#dim(collision.test)
###################################################################
### date/time summary
#collision.test[1,2]
trans.date <- function(x){
a=as.Date(as.character.Date(x),"%m/%d/%Y")
return(a)
}
collision.df= subset(collision.df, select=-TIME.2)
collision.df$DATE= trans.date(collision.df$DATE)
#ISOdate(year, month, day, hour = 12, min = 0, sec = 0, tz = "GMT")
collision.df$Weekend = is.weekend(collision.df$DATE)
collision.df$Holiday= is.holiday(collision.df$DATE)
#class(collision.df[1,2])
collision.df$TIME= as.factor(sapply(strsplit(collision.df$TIME,":"), "[[", 1) )
collision.df[1:10,]
collision.df= collision.df[!is.na(collision.df$LATITUDE) & !is.na(collision.df$LONGITUDE),]
collision.df[1:10,]
setwd("~/Documents/Courses/ADS/Project 2/Fall2016-Proj2-grp14")
dir()
dir(data)
dir("data")
weather.df= fread("data/weatherdata.csv", select= c("Date","Events"))
sort(collision.df[,1])[1:10]
(x <- c(sort(sample(1:20, 9)), NA))
(y <- c(sort(sample(3:23, 7)), NA))
union(x, y)
intersect(x, y)
pre.data <- data.frame(ID = c(1:10), Y = sample(c("yes", "no"), 10, replace = TRUE),
Survey = 1)
post.data <- data.frame(ID = c(1:3,6:10), Y = sample(c("yes", "no"), 8, replace = TRUE),
Survey = 2)
all.data <- rbind(pre.data, post.data)
all.data
all.data[all.data$ID %in% intersect(pre.data$ID, post.data$ID), ]
dat1 <- data.frame(col1=c(0.1,0.1,0.2,0.34,0.4),col2=c(0.21,0.22,0.4,0.3,0.36))
dat2 <- data.frame(col3=(1:7)/10,col4=(2:8)/10)
merge(dat1, dat2, by.x="col1", by.y="col3", all.x=TRUE)[-2]
dim(collision.df)
merge(collision.df, weather.df, by.x= "DATE", by.y= "Date",all.x= TRUE)
test = merge(collision.df, weather.df, by.x= "DATE", by.y= "Date",all.x= TRUE)
test[1:10,c(1,2,18)]
test[20:40,c(1,2,18)]
test[50:70,c(1,2,18)]
test[150:170,c(1,2,18)]
test[1150:1170,c(1,2,18)]
test[2050:2170,c(1,2,18)]
test[1950:2070,c(1,2,18)]
test[1550:1570,c(1,2,18)]
weather.df[1:4,]
weather.df[1:5,]
collision.df[1:30,]
test2= weather.df[1345:1355,]
test2
class(test2[1,1])
as.date(test2[1,1])
as.Date(test2[1,1])
as.Date.numeric(test2[1,1])
as.Date.numeric(test2[1,1],"%m/%d/%Y")
as.character(test2[1,1])
(test2[1,1])
test2[1,1]
test2= weather.df[1345:1355,]
(test2[1,1])
test2[1,1]
test2
test2[1,]
test2[1,1]
test2[1,2]
test2[1,3]
test2= weather.df[1345:1355,]
dim(test2)
class(test2)
class(weather.df)
class(collision.df.auto)
weather.df= date.frame(fread("data/weatherdata.csv", select= c("Date","Events")))
library(data.table)
library(chron)
weather.df= data.frame(fread("data/weatherdata.csv", select= c("Date","Events")))
collision.df<- data.frame(rbind(collision.auto, collision.bike))
collision.auto= fread("data/NYPD_Motor_Vehicle_Collisions.csv",select=c("DATE","TIME","LATITUDE", "LONGITUDE",
"NUMBER OF PERSONS INJURED","NUMBER OF PERSONS KILLED","NUMBER OF PEDESTRIANS INJURED",
"NUMBER OF PEDESTRIANS KILLED","NUMBER OF CYCLIST INJURED","NUMBER OF CYCLIST KILLED",
"NUMBER OF MOTORIST INJURED", "NUMBER OF MOTORIST KILLED"))
collision.bike= fread("data/manhattan_bike_injury.csv",select=c("DATE","TIME","LATITUDE", "LONGITUDE",
"NUMBER OF PERSONS INJURED","NUMBER OF PERSONS KILLED","NUMBER OF PEDESTRIANS INJURED",
"NUMBER OF PEDESTRIANS KILLED","NUMBER OF CYCLIST INJURED","NUMBER OF CYCLIST KILLED",
"NUMBER OF MOTORIST INJURED", "NUMBER OF MOTORIST KILLED"))
weather.df= data.frame(fread("data/weatherdata.csv", select= c("Date","Events")))
#names(collision.df.bike)
#hospital.df= fread("data/Health_and_Hospitals_Corporation__HHC__Facilities.csv")
collision.df<- data.frame(rbind(collision.auto, collision.bike))
test1= collision.df[10:20,]
test2= weather.df[1345:1355,]
test2[1,2]
test2[1,1]
class(test2[1,1])
as.Date.numeric(test2[1,1],"%m/%d/%Y")
as.Date.character(test2[1,1],"%m/%d/%Y")
as.character.Date(test2[1,1],"%m/%d/%Y")
as.Date(test2[1,1],"%Y/%m/%d")
as.character.Date(test2[1,1],"%Y/%m/%d")
as.Date(test2[1,1])
test=as.Date(test2[1,1])
class(test)
class(test1[1,1])
collision.df<- data.frame(rbind(collision.auto, collision.bike))
collision.df= collision.df[!is.na(collision.df$LATITUDE) & !is.na(collision.df$LONGITUDE),]
collision.df$People.Injured = (collision.df$NUMBER.OF.PERSONS.INJURED !=0)
collision.df$People.Killed = (collision.df$NUMBER.OF.PERSONS.KILLED !=0)
collision.df$People.Injured.or.Killed= (collision.df$NUMBER.OF.PERSONS.INJURED !=0 |collision.df$NUMBER.OF.PERSONS.KILLED !=0 )
#dim(collision.test)
###################################################################
### date/time summary
#collision.test[1,2]
trans.date <- function(x){
a=as.Date(as.character.Date(x),"%m/%d/%Y")
return(a)
}
collision.df= subset(collision.df, select=-TIME.2)
collision.df$DATE= trans.date(collision.df$DATE)
#ISOdate(year, month, day, hour = 12, min = 0, sec = 0, tz = "GMT")
collision.df$Weekend = is.weekend(collision.df$DATE)
collision.df$Holiday= is.holiday(collision.df$DATE)
#class(collision.df[1,2])
collision.df$TIME= as.factor(sapply(strsplit(collision.df$TIME,":"), "[[", 1) )
test1= collision.df[10:20,]
class(test1[1,1])
test1= collision.df[10:20,]
test2= weather.df[1345:1355,]
class(test1[1,1])
test2$Date = as.Date(test2$Date)
test = merge(test1, test2, by.x= "DATE", by.y= "Date",all.x= TRUE)
test
test2
weather.df$Date= as.Date(weather.df$Date)
test = merge(collision.df, weather.df, by.x= "DATE", by.y= "Date",all.x= TRUE)
test[1500:1600,c(1,18)]
test[test$DATE == as.Date("2015-10-09"),]
test[test$DATE == as.Date("2015-10-09"),c(1,18)]
colnames(collision.df)[18]=c("Weather")
weather.df$Date= as.Date(weather.df$Date)
collision.df = merge(collision.df, weather.df, by.x= "DATE", by.y= "Date",all.x= TRUE)
colnames(collision.df)[18]=c("Weather")
collision.df[1:10,]
collision.df[1500:1600,]
View(collision.df)
write.csv(collision.df, file="data/collision_dateframe.csv")
class(collision.df[2,2])
class(collision.df[2,3])
names(collision.df)
class(collision.df[2,18])
setwd("~/Documents/Courses/ADS/Project 2/Fall2016-Proj2-grp14")
runApp('app')
runApp('app')
install.packages("choroplethrZip")
runApp('app')
library(devtools)
install_github('arilamstein/choroplethrZip@v1.3.0')
runApp('app')
